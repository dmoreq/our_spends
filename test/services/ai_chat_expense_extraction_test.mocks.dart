// Mocks generated by Mockito 5.4.6 from annotations
// in our_spends/test/services/ai_chat_expense_extraction_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:our_spends/models/category.dart' as _i9;
import 'package:our_spends/models/expense.dart' as _i3;
import 'package:our_spends/models/tag.dart' as _i10;
import 'package:our_spends/providers/auth_provider.dart' as _i6;
import 'package:our_spends/providers/expense_provider.dart' as _i2;
import 'package:our_spends/services/database_service.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ExpenseProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockExpenseProvider extends _i1.Mock implements _i2.ExpenseProvider {
  MockExpenseProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Expense> get expenses =>
      (super.noSuchMethod(
            Invocation.getter(#expenses),
            returnValue: <_i3.Expense>[],
          )
          as List<_i3.Expense>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i4.Future<Map<String, dynamic>> sendMessage(
    String? message,
    String? userId, {
    List<Map<String, String>>? conversationHistory,
    String? languageCode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #sendMessage,
              [message, userId],
              {
                #conversationHistory: conversationHistory,
                #languageCode: languageCode,
              },
            ),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> generateInsights(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#generateInsights, [userId]),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  void setLoading(bool? loading) => super.noSuchMethod(
    Invocation.method(#setLoading, [loading]),
    returnValueForMissingStub: null,
  );

  @override
  void setError(String? error) => super.noSuchMethod(
    Invocation.method(#setError, [error]),
    returnValueForMissingStub: null,
  );

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<void> loadExpensesForTesting() =>
      (super.noSuchMethod(
            Invocation.method(#loadExpensesForTesting, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> addExpense(_i3.Expense? expense) =>
      (super.noSuchMethod(
            Invocation.method(#addExpense, [expense]),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<bool> deleteExpense(String? expenseId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteExpense, [expenseId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i6.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i4.Future<bool> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i7.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i3.Expense>> getExpenses({
    String? categoryId,
    DateTime? startDate,
    DateTime? endDate,
    double? minAmount,
    double? maxAmount,
    String? searchQuery,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getExpenses, [], {
              #categoryId: categoryId,
              #startDate: startDate,
              #endDate: endDate,
              #minAmount: minAmount,
              #maxAmount: maxAmount,
              #searchQuery: searchQuery,
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i4.Future<List<_i3.Expense>>.value(<_i3.Expense>[]),
          )
          as _i4.Future<List<_i3.Expense>>);

  @override
  _i4.Future<_i3.Expense?> getExpenseById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getExpenseById, [id]),
            returnValue: _i4.Future<_i3.Expense?>.value(),
          )
          as _i4.Future<_i3.Expense?>);

  @override
  _i4.Future<String> insertExpense(_i3.Expense? expense) =>
      (super.noSuchMethod(
            Invocation.method(#insertExpense, [expense]),
            returnValue: _i4.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#insertExpense, [expense]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> updateExpense(_i3.Expense? expense) =>
      (super.noSuchMethod(
            Invocation.method(#updateExpense, [expense]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteExpense(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteExpense, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>> getDatabaseStats() =>
      (super.noSuchMethod(
            Invocation.method(#getDatabaseStats, []),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getExpensesByCategory({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getExpensesByCategory, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getSpendingTrends({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSpendingTrends, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<double> getMonthlySpending(int? year, int? month) =>
      (super.noSuchMethod(
            Invocation.method(#getMonthlySpending, [year, month]),
            returnValue: _i4.Future<double>.value(0.0),
          )
          as _i4.Future<double>);

  @override
  _i4.Future<List<_i3.Expense>> searchExpenses(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchExpenses, [query]),
            returnValue: _i4.Future<List<_i3.Expense>>.value(<_i3.Expense>[]),
          )
          as _i4.Future<List<_i3.Expense>>);

  @override
  _i4.Future<List<_i9.Category>> getCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getCategories, []),
            returnValue: _i4.Future<List<_i9.Category>>.value(<_i9.Category>[]),
          )
          as _i4.Future<List<_i9.Category>>);

  @override
  _i4.Future<_i9.Category?> getCategoryById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getCategoryById, [id]),
            returnValue: _i4.Future<_i9.Category?>.value(),
          )
          as _i4.Future<_i9.Category?>);

  @override
  _i4.Future<List<_i10.Tag>> getTags() =>
      (super.noSuchMethod(
            Invocation.method(#getTags, []),
            returnValue: _i4.Future<List<_i10.Tag>>.value(<_i10.Tag>[]),
          )
          as _i4.Future<List<_i10.Tag>>);

  @override
  _i4.Future<_i10.Tag?> getTagById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTagById, [id]),
            returnValue: _i4.Future<_i10.Tag?>.value(),
          )
          as _i4.Future<_i10.Tag?>);

  @override
  _i4.Future<String> exportToCSV({DateTime? startDate, DateTime? endDate}) =>
      (super.noSuchMethod(
            Invocation.method(#exportToCSV, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i4.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#exportToCSV, [], {
                  #startDate: startDate,
                  #endDate: endDate,
                }),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> clearAllData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllData, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
